apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: frred
  name: frred
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frred
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/compose-default: "true"
        io.kompose.service: frred
    spec:
      containers:
        - command:
            - python
            - -m
            - delivery.FRRED
          env:
            - name: DATABOLT_SHARED_DIR
              valueFrom:
                configMapKeyRef:
                  key: DATABOLT_SHARED_DIR
                  name: env
            - name: GREENBRAIN_PASSWORDS
              valueFrom:
                configMapKeyRef:
                  key: GREENBRAIN_PASSWORDS
                  name: env
            - name: GREENBRAIN_USERS
              valueFrom:
                configMapKeyRef:
                  key: GREENBRAIN_USERS
                  name: env
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  key: PGDATABASE
                  name: env
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  key: PGHOST
                  name: env
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  key: PGPASSWORD
                  name: env
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  key: PGPORT
                  name: env
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  key: PGUSER
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: PYTHONPATH
              valueFrom:
                configMapKeyRef:
                  key: PYTHONPATH
                  name: env
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_PASS
                  name: env
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_USER
                  name: env
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_HOST
                  name: env
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PORT
                  name: env
            - name: TTN_API_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: TTN_API_TOKEN
                  name: env
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: env
            - name: UBIDOTS_API_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: UBIDOTS_API_TOKEN
                  name: env
          image: broker/python-base
          name: frred
          resources: {}
          volumeMounts:
            - mountPath: /home/broker/python
              name: frred-claim0
          workingDir: /home/broker/python
      restartPolicy: Always
      volumes:
        - name: frred-claim0
          persistentVolumeClaim:
            claimName: frred-claim0
status: {}
